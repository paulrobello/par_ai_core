name: Publish üêç üì¶ to PyPI

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  setup:
    uses: ./.github/workflows/reusable-setup.yml

  publish-to-pypi:
    if: github.event_name == 'workflow_dispatch'  # Only allow manual triggers
    name: Publish üêç distribution üì¶ to PyPI
    runs-on: ubuntu-latest
    needs: setup
    environment:
      name: pypi
      url: https://pypi.org/p/par_ai_core
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Restore cached build artifacts
        id: cache
        uses: actions/cache@v4
        with:
          path: dist
          key: dist-${{ runner.os }}-3.12-x64-${{ hashFiles('**/pyproject.toml', 'src/**/*.py') }}-${{ github.sha }}
          restore-keys: |
            dist-${{ runner.os }}-3.12-x64-${{ hashFiles('**/pyproject.toml', 'src/**/*.py') }}-
            dist-${{ runner.os }}-3.12-x64-
          fail-on-cache-miss: false

      - name: Build package if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: make package-all
        timeout-minutes: 15

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} ${{ needs.setup.outputs.version }} has been published to PyPI.'
        continue-on-error: true
